#include <stdio.h>
#include <stdlib.h>

int lervalor(int lista)
{
    int valor;
    printf("Digite os valores da lista %d: ", lista);
    scanf("%d", &valor);

    return valor;
}

struct no
{
    int num;
    struct no *prox;
};
typedef struct no Lista;

Lista *insere(Lista *L, int valor)
{
    Lista *aux;
    aux = (Lista*)malloc(sizeof(Lista));

    aux->num = valor;
    aux->prox = L;

    return aux;
}

void printa(Lista *L)
{
    Lista *aux = L;

    while(aux != NULL)
    {
        printf("|%d|", aux->num);
        aux = aux->prox;
    }
    printf("\n");
}

Lista* copiarLista(Lista *L){
    if (L == NULL)
        return NULL;

    Lista *nova = NULL;
    Lista *ultimo = NULL;
    Lista *aux = L;

    while (aux != NULL){
        Lista *novo = (Lista *)malloc(sizeof(Lista));
        if (novo == NULL){
            printf("Erro de alocação de memória.\n");
            exit(1);
        }
        novo->num = aux->num;
        novo->prox = NULL;

        if (nova == NULL){
            nova = novo;
        }else{
            ultimo->prox = novo;
        }

        ultimo = novo;
        aux = aux->prox;
    }

    return nova;
}

Lista* inserelista(Lista *L1, Lista *L2, int num){
    Lista *aux = L1;
    Lista *ant = NULL;
    Lista *FinalL2;

    while (aux != NULL){
        if (aux->num == num){
            Lista *copiaL2 = copiarLista(L2);
            FinalL2 = copiaL2;

            while (FinalL2->prox != NULL){
                FinalL2 = FinalL2->prox;
            }

            Lista *excluir = aux;
            if (ant == NULL){
                L1 = copiaL2;
            } else {
                ant->prox = copiaL2;
            }
            FinalL2->prox = aux->prox;
            aux = aux->prox;
            free(excluir);

            ant = FinalL2;
        }else{
            ant = aux;
            aux = aux->prox;
        }
    }
    return L1;
}

void ordena(Lista *L2)
{
    int troca;
    Lista *aux;
    Lista *mudacaixinha = NULL;
    int atual;

    do
    {
        aux = L2;
        atual = 0;
        while(aux->prox != mudacaixinha)
        {
            if(aux->num > aux->prox->num)
            {
                troca = aux->num;
                aux->num = aux->prox->num;
                aux->prox->num = troca;
                atual = 1;
            }

            aux = aux->prox;
        }
        mudacaixinha = aux;

    }while(atual);
}

int main(void)
{
    Lista *L1 = NULL;
    Lista *L2 = NULL;
    int valor, compara;

    for (int i = 0; i < 7; i++) {
        valor = lervalor(1);
        L1 = insere(L1, valor);
    }

    for (int i = 0; i < 4; i++) {
        valor = lervalor(2);
        L2 = insere(L2, valor);
    }

    printa(L1);
    printa(L2);

    ordena(L2);

    puts("L2 ordenada: ");
    printa(L2);

    puts("Digite o valor onde inserir L2 em L1: ");
    scanf("%d", &compara);
    L1 = inserelista(L1, L2, compara);
    printa(L1);

    return 0;
}
