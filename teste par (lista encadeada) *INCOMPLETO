#include <stdio.h>
#include <stdlib.h>

struct no{
    int num;
    struct no *prox;
};
typedef struct no lista;

lista* insere(lista *L, int i){
    lista *novo;
    novo = (lista *)malloc(sizeof(lista));
    if (novo == NULL){
        printf("Erro de alocação de memória.\n");
        exit(1);
    }
    novo->num = i;
    novo->prox = L;
    return novo;
}

void imprimir(lista *L){
    lista *aux = L;
    while (aux != NULL){
        printf("|%d|", aux->num);
        aux = aux->prox;
    }
    printf("\n");
}

lista* copiarLista(lista *L){
    if (L == NULL)
        return NULL;

    lista *nova = NULL;
    lista *ultimo = NULL;
    lista *aux = L;

    while (aux != NULL){
        lista *novo = (lista *)malloc(sizeof(lista));
        if (novo == NULL){
            printf("Erro de alocação de memória.\n");
            exit(1);
        }
        novo->num = aux->num;
        novo->prox = NULL;

        if (nova == NULL){
            nova = novo;
        }else{
            ultimo->prox = novo;
        }

        ultimo = novo;
        aux = aux->prox;
    }

    return nova;
}

lista* inserirLista(lista *L1, lista *L2, int num){
    lista *aux = L1;
    lista *ant = NULL;
    lista *FinalL2 = L2;

    while (FinalL2->prox != NULL){
        FinalL2 = FinalL2->prox;
    }

    while (aux != NULL){
        if (aux->num %2 == 0){
            lista *copiaL2 = copiarLista(L2);
            FinalL2 = copiaL2;
            while (FinalL2->prox != NULL){
                FinalL2 = FinalL2->prox;
            }
            lista *excluir = aux;
            if (ant == NULL){
                L1 = copiaL2;
            } else {
                ant->prox = copiaL2;
            }
            FinalL2->prox = aux->prox;
            aux = aux->prox;
            free(excluir);
        }else{
            ant = aux;
            aux = aux->prox;
        }
    }
    return L1;
}

void ordena(lista *L2){
    int troca;
    lista *aux;
    lista *mudacaixinha = NULL;
    int atual;

    do{
        aux = L2;
        atual = 0;
        while (aux->prox != mudacaixinha){
            if (aux->num > aux->prox->num){
                troca = aux->num;
                aux->num = aux->prox->num;
                aux->prox->num = troca;
                atual = 1;
            }
            aux = aux->prox;
        }
        mudacaixinha = aux;
    } while(atual);
}

int main() {
    lista *L1 = NULL;
    lista *L2 = NULL;
    int numEsc;

    // INSERE VALORES NA LISTA -> 4321432143214321
    for (int i = 0; i < 4; i++) {
        for (int j = 0; j < 4; j++) {
            L1 = insere(L1, j);
        }
    }

    L2 = insere(L2, 7);
    L2 = insere(L2, 9);
    L2 = insere(L2, 8);


    imprimir(L1);
    imprimir(L2);

    printf("\n");

    ordena(L2);
    L1 = inserirLista(L1, L2, numEsc);

    puts("Lista apos a subst: ");
    imprimir(L1);

    return 0;
}
